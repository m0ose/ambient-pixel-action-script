<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.graphics.codec.PNGEncoder;
			
			import org.osmf.events.LoaderEvent;
			
			import structuredlight.CameraProjecterMap2;
			import structuredlight.Displacement24;
			import structuredlight.Displacement24Files;
			import structuredlight.MapFileOpener;
			import structuredlight.ProjectorMap;
			import structuredlight.Reversemap;
			
			var fileO:MapFileOpener = new MapFileOpener;
			var rev_map:Reversemap;
			var cam_map:CameraProjecterMap2;
			var proj_map:ProjectorMap;
			var bendyProjCam:Displacement24;
			
			var filts:Array ; // filters
			
			
			//[Embed(source="chacoPanarama.jpeg")]
			//[Embed(source="chacoPanarama_small.jpg")]
			[Embed(source="images/chacoPanarama3072Xsomething.jpg")]
			//[Embed(source="images/100520-ALBAMU-360-04-LEVEL.jpg")] 
			private var chacoPanarama:Class;
			
		
			
			function load()
			{
				fileO.importMap()
				fileO.addEventListener( "loaded Map", loaded)
			}
			function loaded(e:Event = null)
			{
				//rev_map = new Reversemap( fileO.cam_map)
				cam_map = fileO.cam_map;
				_img.source = new Bitmap( cam_map.makeGrayArrayImage() );
					
			}
			

			function bendProjCam()
			{
				var bm:Bitmap = new chacoPanarama();
				_img.source = bm ;
				//_img.source = new Bitmap( quickBMP( stage.width, stage.height ) );
				bendyProjCam = new Displacement24();
				bendyProjCam.fromProjectorMap( proj_map);
				filts = [ bendyProjCam.filter ];
				_img.filters = filts;
				
			}
			
	
			
			
			public function interpolate()
			{
				
				proj_map = new ProjectorMap( cam_map);
				proj_map.interpolate( _denoise.selected , _percentToKeep.value );
				filts = [];
				_img.filters = filts;
				_img.source = new Bitmap( proj_map.drawProj_map() );
				
			}
			
			
			function formChange( )
			{
				var zoom:Number = _zoom.value;
				var offsetX:Number = _offsetX.value;
				var offsetY:Number = _offsetY.value;
				
				if( bendyProjCam )
				{
					bendyProjCam.offsetX = offsetX;
					bendyProjCam.offsetY = offsetY;
					bendyProjCam.zoom = zoom;
					bendyProjCam.init();
				}
				
				_img.filters = filts;
			}

			
			function showPan()
			{
				var bm:Bitmap = new chacoPanarama() ;
				_img.source = bm;
				_img.x = _img.y = 0 ;
				//_img.width = stage.width;
				//_img.scaleX = stage.width / _img.content.width;
				
				
			}
			
			
			//
			//  MOUSE NAVIGATION STUFF
			//
			//
			var mouseIsDown:Boolean = false;
			var mouseStart:Point = new Point(0,0);
			var bendyStart:Point = new Point(0,0)
			function mouse_Down( e:MouseEvent)
			{//mouse down  ,  mouse down. //send in support
				mouseStart = new Point( e.localX, e.localY);
				mouseIsDown = true;
				if( bendyProjCam)
				{
					bendyStart = new Point( bendyProjCam.offsetX, bendyProjCam.offsetY );
				}
			}
			function mouse_up(e:MouseEvent)
			{
				mouseIsDown = false;
	
			}
			function mouse_move(e:MouseEvent)
			{
				if( mouseIsDown)
				{
					//_log.text = " \n mouse pos "+new Point(e.localX , e.localY) +" "+ _log.text;
					//_log.text =" \n mouse relative pos "+new Point(e.localX - mouseStart.x , e.localY - mouseStart.y ) + " " + _log.text;
					var offsetX:Number = Number( bendyStart.x -( new int(e.localX) - mouseStart.x) );
					var offsetY:Number = Number( bendyStart.y -( new int(e.localY) - mouseStart.y) );
					
					if(bendyProjCam )
					{
						//_log.text = "moving   " + _log.text;
						bendyProjCam.offsetX = offsetX;
						bendyProjCam.offsetY = offsetY;
						bendyProjCam.init();
						
						filts = [bendyProjCam.filter]
						_img.filters = filts;
					}
					
				}
				
			}
			function mouse_wheel(e:MouseEvent)
			{
				//_log.text += " mouse wheel" + _img.scaleX ;
				if( e.delta > 0 )
				{
					if( bendyProjCam.zoom < 2.9)
					{
						bendyProjCam.zoom += 0.02
					}
				}
				else if( e.delta < -0 )
				{
					if( bendyProjCam.zoom > 0.2)
					{
						bendyProjCam.zoom -= 0.02 ;
					}
				}

				
				bendyProjCam.init();
				filts = [bendyProjCam.filter]
				_img.filters = filts;
			}
			
			//
			//
			//  FILE STUFF
			//
			// it takes all of thes functions to load two files in flash. WTF !!
			
			
			/*var xImg:BitmapData
			var yImg:BitmapData
			var fR:FileReference = new FileReference();
			*/
			var disp24File:Displacement24Files = new Displacement24Files();
			function loadImage( n:String)
			{
				
				
				if( n=="x")
				{
					disp24File.loadXmap();
					
				}
				else if( n=="y")
				{
					
					disp24File.loadYmap();
				}
				
			}
			function distort()
			{
				if( disp24File.filesReady() )
				{
					showPan();
					
					bendyProjCam = disp24File.Disp24;
					filts = [ bendyProjCam.filter ];
					_img.filters = filts;
				}
			}
			function showGrid()
			{
				if ( bendyProjCam)
				{
					_img.source = new Bitmap( bendyProjCam.quickBMP( stage.width, stage.height ) ) ;
				}
				else
				{
					var d24d:Displacement24 = new Displacement24();
					_img.source = new Bitmap( d24d.quickBMP(stage.width, stage.height) );
				}
			}
		
		
		]]>
	</fx:Script>
	<mx:Image x="0" y="0" scaleX = "1" scaleY="1" id="_img" mouseDown="mouse_Down(event)" mouseUp="mouse_up(event) " mouseMove="mouse_move(event)" mouseWheel="mouse_wheel(event)"/>
	<mx:Image x="0" y="0" id="_img2"/>
	
	<s:Button x="9" y="275" label="load" click="load()"/>
	<s:Button x="10" y="126" label="panarama"  enabled="false" click="bendProjCam()" id="_bendProjButton"/>
	<s:Button x="282" y="293" label="interpolate" click="interpolate() ; _bendProjButton.enabled=true "/>
	<mx:Form x="57" y="245" width="215" height="162" dropShadowVisible="true" backgroundAlpha="0.5"  backgroundColor="#707070" visible='false'>
		<mx:FormItem label="zoom">
			<s:HSlider id="_zoom" width="131" maximum="10" minimum="0.0" stepSize="0.1" value="1.0" change="formChange()"/>
		</mx:FormItem>
		<mx:FormItem label="offsetX">
			<s:HSlider id="_offsetX" width="208" minimum="-800" maximum="800" value="0"  change="formChange()"/>
		</mx:FormItem>
		<mx:FormItem label="offSetY" width="263">
			<s:HSlider id="_offsetY" width="210" minimum="-800" maximum="800" value="0"  change="formChange()"/>
		</mx:FormItem>
		<s:Button label="show panarama" click="showPan()"/>
		<s:TextArea id="_log"/>
	</mx:Form>
	<s:HSlider x="107" y="303" minimum="0.0" maximum="1.0" stepSize="0.01" value="1.0" id="_percentToKeep"/>
	<s:Label x="107" y="293" text="percentage of points to keep"/>
	<s:CheckBox x="10" y="296" label="de-noise" id="_denoise" selected="false"/>
	<s:Button x="10" y="68" label="load X image" click="loadImage('x')"/>
	<s:Button x="120" y="68" label="load Y image" click="loadImage('y')"/>
	<s:Button x="242" y="68" label="show pan" click="distort()"/>
	<s:Button x="15" y="155" label="grid" click="showGrid()"/>
	
</s:Application>

